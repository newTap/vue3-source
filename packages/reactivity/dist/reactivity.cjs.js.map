{"version":3,"file":"reactivity.cjs.js","sources":["../../shared/src/index.ts","../src/effect.ts","../src/constants.ts","../src/baseHandlers.ts","../src/reactive.ts"],"sourcesContent":["export const isObject =  (value:unknown) => typeof value === 'object' && value !== null\n\nexport const isArray = Array.isArray\n\nexport const isString = (val: unknown): val is string => typeof val === 'string'\n\nexport const isSymbol = (val: unknown): val is symbol => typeof val === 'symbol'\n\nexport const isIntegerKey = (key: unknown) =>  isString(key)&&key[0]!='_'&&parseInt(key, 10)+'' === key\n\nexport const hasOwn = (target: object, key: string | symbol): boolean => target.hasOwnProperty(key)","import { isArray, isSymbol } from \"@vue/shared\";\nimport { TrackOpTypes, TriggerOpTypes } from \"./constants\";\n\ntype EffectOptions = {\n lazy?: false\n}\n\ntype ActiveEffectType= () => void\nlet uid = 0;\n// 用于记录当前正在执行的副作用函数\nlet activeEffect: ActiveEffectType;\n// 用户基于当前正在执行的副作用函数队列\n// !如果不适用队列形式存储，会导致effect嵌套时，activeEffect无法被正确获取\n// effect(function () {\n//   let name = proxy.name\n//   effect(function () {\n//     let name = proxy.name\n//   })\n//   let list = proxy.list\n// })\nlet activeEffectPool: ActiveEffectType[] = []\n\n// 副作用函数的触发\nexport function effect (fn: () => void, options?: EffectOptions){\n  console.log('触发依赖')\n  const effectFn = function reactiveEffect(){\n    // 防止effect函数的的报错，对代码逻辑的影响\n    try{\n      activeEffect = fn\n      activeEffectPool.push(activeEffect)\n      fn()\n    }finally{\n      activeEffectPool.pop()\n      activeEffect = activeEffectPool[activeEffectPool.length - 1]\n    }\n  }\n \n  effectFn.fn = fn // 保存用户的原方法\n  effectFn.options = options // 保存用户的原配置\n  effectFn.id = uid++ // effect 的ID\n  effectFn._isEffect = true // 标记是否为 effect\n  if(!options?.lazy) effectFn();\n  return effectFn\n}\n\ntype Deps =  Set<() => void>\n\ntype KeyToDepMap = Map<any, Deps>\n\n// 用于存储依赖的集合\nconst targetActiveMap = new WeakMap<object, KeyToDepMap>()\n// 依赖的收集\nexport function track(target:object, key: string | symbol, type: TrackOpTypes){\n  console.log('开始收集依赖')\n  // 只有在副作用函数调用期间才做依赖的收集\n  if(!activeEffect) return false\n\n  // 依赖集合的数据结构，第一层使用WeakMap，利用它的弱引用\n  // target作为key值，依赖集合作为value值\n  let targetMap = targetActiveMap.get(target)\n  if(!targetMap) targetActiveMap.set(target, (targetMap = new Map()))\n  // 第二层使用Map数据结构\n  // key作为key值，依赖集合作为value值\n  let dep = targetMap.get(key)\n  // 第三层使用Set数据结构,当相同数据添加值set中会做自动去重操作\n  // 用于存放对应的副作用函数\n  if(!dep) targetMap.set(key, (dep = new Set()))\n\n  // 为对应的key添加副作用函数\n  dep.add(activeEffect)\n\n}\n\n// 依赖是触发\nexport function trigger(target:object, key: string | symbol, type: TriggerOpTypes, value: unknown, oldValue: unknown){\n  let targetMap = targetActiveMap.get(target)\n  console.log('targetActiveMap', targetActiveMap, target, key, value)\n  // 当前的修改没有依赖\n  if(!targetMap) {\n    console.log('没有当前的target依赖映射', target)\n    return false\n  }\n  let deeps:Deps[] = []\n\n  if(isArray(target) && key === 'length'){\n    // 单独对修改数组的length操作做处理\n    // !当proxy对象没有代理length属性，却修改了数组的length，会导致没有对应的依赖\n    //  effect(function () {\n    //   app.innerText = `${proxy.list[2]}`\n    // })\n    // setTimeout(() => {\n    //   proxy.list.length = 1\n    // }, 1000)\n    // 如果target是数组。并且当前的key是length。value的值大于target的length\n    // 证明数组的长度发生了变化(变小了)\n    targetMap.forEach((dep, key) => {\n      if(key === 'length' || (!isSymbol(key) &&  Number(key) >= Number(value))){\n        deeps.push(dep)\n      }\n    });\n  }else{\n    // 可能是对象的操作\n    let dep = targetMap.get(key)\n    if(dep){\n      deeps.push(dep)\n    }\n  }\n  for (let dep of deeps) {\n    if(dep){\n      triggerEffects(dep)\n    }\n  }\n}\n\nfunction triggerEffects(dep:Deps){\n  for (const effect of dep.keys()) {\n    effect()\n  }\n}","export enum TrackOpTypes {\n  GET = 'get',\n  HAS = 'has',\n}\n\nexport enum TriggerOpTypes {\n  SET = 'set',\n  ADD = 'add',\n}","import { hasOwn, isArray, isIntegerKey, isObject } from \"@vue/shared\"\nimport { reactive, readonly } from \"./reactive\"\nimport { track, trigger } from \"./effect\"\nimport { TrackOpTypes, TriggerOpTypes } from \"./constants\"\n\nconst get = createGetter()\nconst readonlyGet = createGetter(true)\nconst shallowReactiveGet = createGetter(false, true)\nconst shallowReadonlyGet = createGetter(true, true)\n\nconst set = createSetter()\nconst shallowSet = createSetter(true)\n\nexport const reactiveHandler = {\n  get,\n  set\n}\n\nexport const readonlyHandler = {\n get: readonlyGet,\n set: function(){\n  console.error('只读无法修改')\n  return false\n }\n}\n\nexport const shallowReactiveHandler = {\n  get: shallowReactiveGet,\n  set: shallowSet\n}\n\nexport const shallowReadonlyHandler = {\n  get: shallowReadonlyGet,\n  set: function(){\n   console.error('只读无法修改')\n   return false\n  }\n}\n\nfunction createGetter(isReadonly = false, isShallow = false) {\n  return function get (target: object, key:string|symbol, receiver: object) {\n      console.log(`get: `, key)\n      const res = Reflect.get(target, key, receiver)\n      // 收集 effect\n      if(!isReadonly){\n        console.log('收集 effect')\n        track(target, key, TrackOpTypes.GET)\n      }\n      // 递归处理,为了实现深层次的响应式\n      //! 只有调用到了get方法，才会进行递归，并没有将所有的子对象递归。属于优化\n      if(!isShallow && isObject(res)) {\n        console.log('调用递归', res)\n        // !保证返回的对象是一个代理对象\n        // !否则在第一次进行set操作的时候，会导致无法监听到set的操作\n        return isReadonly? readonly(res as object) : reactive(res as object)\n      }\n      return res\n    }\n}\n\nfunction createSetter(isShallow = false){\n  return function set(target:object,key:string | symbol, value: unknown, receiver:object) {\n      console.log(`set: `, key,  value, target)\n      // !当对数组做操作(删除,或增加)，会先调用对应下标的set操作，然后再调用length的set操作\n      // !当对数组做操作时，对应的key会被处理为string类型\n      // !当对数组的length直接做操作时，会直接调用length的set操作，无法触发对应下标的set操作\n\n      // 1.先区分属于与对象的操作\n      // 2.再区分是修改操作，还是增加操作\n      let hasKey = isArray(target) && isIntegerKey(key)?\n       Number(key) < target.length : hasOwn(target, key)\n      let oldValue = (target as any)[key]\n\n      let ref = Reflect.set(target,key, value, receiver)\n\n    // 执行 effect\n      if(hasKey){\n        // 修改操作\n        console.log('修改操作')\n        trigger(target, key, TriggerOpTypes.SET, value, oldValue)\n      }else{\n        // 新增操作\n        console.log('新增操作')\n        trigger(target, key, TriggerOpTypes.ADD, value, oldValue)\n      }\n\n      return ref\n    }\n}","import { isObject } from \"@vue/shared\";\nimport { reactiveHandler, readonlyHandler, shallowReactiveHandler, shallowReadonlyHandler } from \"./baseHandlers\";\n\nexport type targetType<T> = T;\n// 使用WeakMap存储代理对象\n// WeakMap的键是弱引用，不会影响垃圾回收\nconst reactiveMap = new WeakMap();\nconst readonlyMap = new WeakMap();\n/**\n * reactive\n *\n * [export description]\n *\n * 响应式转换是\"成层\"的: 他会影响到所有嵌套的属性。\n *\n * \"深层\"次的响应代理\n *\n * @param   {T}          data  [需要代理的对象]\n *\n * @return  {<T><data>}        [返回一个对象的响应式代理。]\n */\nexport function reactive<T extends object>(data:T):object{\n  return createReactiveObject(data, false, false, reactiveHandler)\n} \n/**\n * [export description]\n *\n * 只读代理是深层的：对任何嵌套属性的访问都将是只读的\n *\n * \"深层\"次的响应代理，只读\n *\n * @param   {T}          data  [接受一个对象 (不论是响应式还是普通的) 或是一个 ref，]\n *\n * @return  {<T><data>}        [return 返回一个原值的只读代理]\n */\nexport function readonly<T extends object>(data:T):object{\n  return createReactiveObject(data, true , false, readonlyHandler)\n}\n\n/**\n * [export description]\n *\n * reactive() 的浅层作用形式。\n * 这里没有深层级的转换：一个浅层响应式对象里只有根级别的属性是响应式的。属性的值会被原样存储和暴露\n *\n * \"浅层\"次的响应代理\n *\n * @param   {T}          data  [data 需要代理的对象]\n *\n * @return  {<T><data>}        [return 一个没有深度代理的响应对象]\n */\nexport function shallowReactive<T extends object>(data:T):object{\n  return createReactiveObject(data, true, false, shallowReactiveHandler)\n}\n\nexport function shallowReadonly<T extends object>(data:T):object{\n  return createReactiveObject(data, true, false, shallowReadonlyHandler)\n}\n\n/**\n * [createReactiveObject description]\n *\n * @param   {T}  data        [监听的数据对象]\n * @param   {[type]}isReadonly  [是否只读]\n * @param   {[type]}isShallow   [是否深层代理]\n *\n * @return  {T}              [return 数据的代理对象]\n */\nfunction createReactiveObject<T extends object>(data:T, isReadonly=false, isShallow=true, handlers:ProxyHandler<T>):T {\n  // 非对象类型直接返回\n  if(!isObject(data)) {\n    console.error('请给一个对象')\n    return data;\n  }\n  const proxyMap = isReadonly ? readonlyMap : reactiveMap\n  // 校验是否已有代理对象\n  if(proxyMap.has(data)) return proxyMap.get(data);\n  // 若目标已经是一个代理对象，则需要返回该对象 待完善\n\n  const proxy =  new Proxy(data, handlers);\n  proxyMap.set(data, proxy)\n  return proxy\n}"],"names":[],"mappings":"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"}